name: CI

on:   
  pull_request: {}
  push: { branches: [master] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  requestActivation:
    name: Request activation ‚úî
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v1

      # Activate Unity
      - name: Unity - Activate
        uses: webbertakken/unity-activate@v1
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

  testRunnerInEditMode:
    name: Test in editmode üìù
    runs-on: ubuntu-latest
    steps:
      # Checkout repository (required to test local actions)
      - name: Checkout repository
        uses: actions/checkout@v1

      # Configure test runner
      - name: Run tests
        id: testRunner
        uses: webbertakken/unity-test-runner@v1
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_PROJECT_PATH: /HohimBrueh
          TEST_MODE: editmode

      # Upload artifact
      - name: Expose as artifact
        uses: actions/upload-artifact@v1
        with:
          name: Test results (edit mode)
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  buildForWindows:
    name: Build for Windows üóó
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: webbertakken/unity-builder@v0.5
        with:
          projectPath: /HohimBrueh
          unityVersion: 2019.2.11f1
          targetPlatform: StandaloneWindows64
      - run: |
          cd build/StandaloneWindows64-2019.2.11f1
          ls
          mv StandaloneWindows64 StandaloneWindows64.exe
      - uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build/StandaloneWindows64-2019.2.11f1
      - run: zip -r Build.zip build/StandaloneWindows64-2019.2.11f1
      - uses: JasonEtco/upload-to-release@master
        with:
          args: Build.zip application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}